Elabore um algoritmo que solicite ao usuário dois valores inteiros que representam o tamanho de uma matriz que armazena valores inteiros.
//O algoritmo também deve solicitar um intervalo de valores e preencher a matriz gerada com os valores no intervalo especificado. Valide se os valores do intervalo fornecidos são válidos, onde o primeiro valor deve ser menor do que o segundo. Se os valores não forem válidos, solicite outros até valores válidos serem fornecidos (1,2 ponto). Em seguida, o algoritmo deve determinar qual o segundo maior valor da matriz e uma posição (índices da matriz) esse valor pode ser encontrado
//(o valor pode ter se repetido na matriz, mas apenas uma das posições deve ser mostrada) (1,8 pontos).

#include <stdio.h>
#include <stdlib.h>
 
int main(void) {
	int k, l, i, j, min, max,intervalo;
	
	//cria matriz do tamanho informado pelo usuario
	printf("Informe o tamanho da matriz: ");
	scanf("%i%i", &k, &l);
	float mat[k][l];
 
	//preenche a matriz em um intervalo informado pelo usuario
	printf("Defina o intervalo: ");
	scanf("%i%i", &min, &max);
	while (max < min) {
		printf("Intervalo invalido. Digite novos valores: ");
		scanf("%i%i", &min, &max);
	}
	
	intervalo = max - min;
	printf("Intervalo: %i \n", intervalo);
 
	for (i = 0; i < k; i++) {
		for (j = 0; j < l; j++) {
			mat[i][j] = rand()%intervalo + min; 
		}
	}
 
	//mostra a matriz
	for (i = 0; i < k; i++) {
		for (j = 0; j < l; j++) {
			printf("%.1f ", mat[i][j]);
		}
		printf("\n");
	}
 
	return 0;
}

[segunda parte]:

#include <stdio.h>
 
int main(void) {
	int mat[3][3] = {1,3,5,3,7,2,0,5,1}, i, j, maior, smaior;
 
	maior = mat[0][0];
	smaior = maior;
	for (i = 0; i < 3; i++) {
		for (j=0; j < 3; j++) {
			if (mat[i][j] > maior) {
				smaior = maior;
				maior = mat[i][j];
			}	
		}
	}
 
	for (i = 0; i < 3; i++) {
		for (j=0; j < 3; j++) {
			if (mat[i][j] == smaior) {
				printf("Posicao: %i %i\n", i, j);
				i = 5;
				j = 5;
			}	
		}
	}
 
	printf("Maior: %i \n", maior);
	printf("Segundo Maior: %i", smaior);
	return 0;
}
